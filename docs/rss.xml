<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>周仕磊的博客</title><link>https://blackcatontree.github.io/zhoushilei.github.io</link><description>整理自己编程中遇到的问题</description><copyright>周仕磊的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/114755056?v=4</url><title>avatar</title><link>https://blackcatontree.github.io/zhoushilei.github.io</link></image><lastBuildDate>Fri, 24 Oct 2025 19:36:09 +0000</lastBuildDate><managingEditor>周仕磊的博客</managingEditor><ttl>60</ttl><webMaster>周仕磊的博客</webMaster><item><title>20251025 bash 文件的构建</title><link>https://blackcatontree.github.io/zhoushilei.github.io/post/20251025%20bash%20-wen-jian-de-gou-jian.html</link><description>## 基础操作
```shell
rm -f name.txt # 强制清除文件
cat batch.txt | parallel --env _ --joblog 02.log --retries 3 --jobs 16 process_pdbid {} #批处理操作
```
## IF语句
``` shell
if [[ $? -eq 0]]; then
    gmx editconf -f ${pdbid}_protein.gro -o ${pdbid}_protein_H.pdb -nobackup &gt; /dev/null 2&gt;&amp;1 #gro 转化为pdb文件，现在已经去掉了H
    python $base_directory/02_protein_process/0202_addchain.py\
        --pdbfile ${pdbid}_protein_H.pdb \
        --pdbid $pdbid\
        --outdir $outdir #结束不需要反斜杠
else
    echo '${pdbid} pdb2gmx failed. Check pdb2gmx.out for details.'
    echo ${pdbid} &gt;&gt; $base_directory/02_protein_process/nonstandard_residue.txt
fi   
``` 
## function defination
```shell
02_protein_process() {
    # defination
    base_directory=$(pwd)#当前文件夹
    local pdbfile='${base_directory}/data/$pdbid/protein/${pdbid}_protein_0_fixed.pdb'
    
    # action
    mkdir -p $outdir
    cd $outdir
    
    # python
    python $base_directory/0201_dump_protein.py\
        --pdbfile $pdbfile\
        --ligandfile $ligandfile\
        --pdbid $pdbid\
        --outdir $outdir
}
# function 调用
export -f 02_protein_process #将函数导入到shell环境中
```
。</description><guid isPermaLink="true">https://blackcatontree.github.io/zhoushilei.github.io/post/20251025%20bash%20-wen-jian-de-gou-jian.html</guid><pubDate>Fri, 24 Oct 2025 19:16:47 +0000</pubDate></item><item><title>特异性靶点小分子药物筛选</title><link>https://blackcatontree.github.io/zhoushilei.github.io/post/te-yi-xing-ba-dian-xiao-fen-zi-yao-wu-shai-xuan.html</link><description>## 蛋白质口袋划分
选取口袋部分，6A ,8A ,
球形/正方形
ps. 一定按照文献中的数据进行

## 从数据库中下载mol2
400millions 的药物分子去和蛋白质口袋进行作用

## 筛选出TOP1K的数据
DrugClip 一种基于对比学习的蛋白质-分子表示学习框架，将虚拟筛选重构为密集检索任务，通过双编码器，
1. unimol的3d transformer 学习蛋白质口袋于分子的表示；
2. HomoAug生物数据增强（利用同源蛋白质生成新训练对）和rdkit构象模拟处理训练-测试不一致的问题，在
结果：
1. dud-e 和lit-pcba基准测试中，零样本设置下显著优于Glide-sp vina等传统对接方法

## 查看TOP100/20/50里面有没有我们的阳性分子
我们有pos阳性的分子 也有neg阴性的分子


注意：
1. 我们特征提取时可以将数据提取出来之后直接进行，不需要重复进行计算
2. 大规模的特征提取，可以采用faceholk的方式进行。</description><guid isPermaLink="true">https://blackcatontree.github.io/zhoushilei.github.io/post/te-yi-xing-ba-dian-xiao-fen-zi-yao-wu-shai-xuan.html</guid><pubDate>Fri, 24 Oct 2025 05:31:15 +0000</pubDate></item><item><title>python基础操作</title><link>https://blackcatontree.github.io/zhoushilei.github.io/post/python-ji-chu-cao-zuo.html</link><description>##  linux 下 python 版本和位置查看
- which python #查找系统中有那些python
- ls /usr/bin/python* # 列出所有的python文件
- ls /usr/bin/python* # 系统python版本查看
- conda --version # 查看conda的安装版本
- conda info # conda 的信息
- conda env list # 列出conda的所有env
- conda list python # 查看当前的python版本
- conda create -n aidd310 python=3.10

## linux 下conda创建新的环境
- ls -la /home/ # 检查用户主目录的权限
- conda create -p ./conda_envs/aidd310 python=3.10 # 当前文件夹创建conda_envs 存储一个aidd310 的env名称，指定python版本是310
- conda activate ./conda_envs/aidd310 # 激活aidd310
```shell
mkdir /home/dataset-assist-0/conda-env
mkdir /home/dataset-assist-0/conda-pkg
conda config --add envs_dirs /home/dataset-assist-0/conda-env/
conda config --add pkgs_dirs /home/dataset-assist-0/conda-pkg/
conda create -n myenv python=3.11
``` 
- conda deactivate # 退出当前环境
- rm -rf /home/dataset-assist-0/tmp/zsl/conda_envs/aidd310 文件夹中的环境
- conda create -p /home/dataset-assist-0/tmp/zsl/conda_envs/aidd310 python=3.10 -y 重新安装环境
- python --version # 查看当前python环境

## windows 上的pkg打包到linux
windows上导出pkg
- 脏的方式：conda env export &gt; environment.yml
- 干净的方式: conda env export --no-builds &gt; environment.yml
linux 上安装pkg
- conda activate aidd310 # 激活新的环境
- conda activate /home/dataset-assist-0/tmp/zsl/conda_envs/aidd310

```shell
# 添加清华镜像
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
conda config --set show_channel_urls yes

# 然后重新安装
conda install numpy=1.26.4 scipy pandas matplotlib -y
``` 
- pip install numpy==1.26.4 pandas matplotlib scipy
- pip install openbabel-wheel
- pip install pybel
- pip install rdkit==2025.9.1
- 
。</description><guid isPermaLink="true">https://blackcatontree.github.io/zhoushilei.github.io/post/python-ji-chu-cao-zuo.html</guid><pubDate>Fri, 24 Oct 2025 03:49:14 +0000</pubDate></item><item><title>windows命令行的操作方法</title><link>https://blackcatontree.github.io/zhoushilei.github.io/post/windows-ming-ling-xing-de-cao-zuo-fang-fa.html</link><description> Get-ChildItem -Directory | Select-Object Name | Out-File -FilePath folder_list.txt -Encoding UTF8 
将当前文件夹中的所有文件夹的名字复制到一个文件中，并且将其放置在该文件夹下 编码方式采用UTF8的方式。</description><guid isPermaLink="true">https://blackcatontree.github.io/zhoushilei.github.io/post/windows-ming-ling-xing-de-cao-zuo-fang-fa.html</guid><pubDate>Wed, 22 Oct 2025 15:39:22 +0000</pubDate></item><item><title>20251019 选导师</title><link>https://blackcatontree.github.io/zhoushilei.github.io/post/20251019%20-xuan-dao-shi.html</link><description>目标

- [ ] 指导能力强--------年轻老师
- [ ] 帮助我快速完成论文----近几年有会议文章
- [ ] 有助于工作--------蛋白方向
- [ ] Aicode 背景
- [ ] 人性格好

个人情况

1. 现在正在进行蛋白质+高通量DFT计算+预测蛋白质-配体相互作用的课题
2. 我自己完成过简单的高通量DFT计算

目标老师情况
| 姓名          | 博士毕业年限|背景          |近三年论文情况|指导方向|性格方面|和自己方向是否相关|拟立项目|状态|
| ----------- | ----------- | ----------- | ----------- | ----------- | ----------- |----------- |----------- |----------- |
|刘畅|2019|计算机背景|子刊+顶会（非常好，作为通讯或第一作者）|1.生成式模型基于配体和蛋白质生成构象（MD模拟）； | 严谨、指导性强、时间一般|熟悉MD模拟，可以和蛋白质+配体联系在一起|多模态需求下更加统一且灵活的生成式建模框架研究与应用|科研向，学1/2|
|朱屹恒|2025|数学+计算机背景|顶会（每年一篇，没有通讯）|1.多模态结合信息编码预测kd；2.生成式定向ai设计（强化学习）|热情、指导可能不会手把手|很相关|基于核酸结构适配体AI设计体系|科研+企业，要做实验，学1/2|
|冯世坤|2025|计算机|顶会（每年一篇）|分子生成式模型和降噪|还蛮好的，同学说|很相关|AIDD领域基础模型|科研+企业，要学1/2|
|魏欣然|2021|计算机|只有一篇共一的论文在后|应该会强一些吧，21年毕业，博士生刚毕业|性格直爽、据说很好|弱相关，主动学习判断当下选择DFT还是机器学习力场|利用GPU分布式集群大幅提升密度泛函理论的计算速度和体系规模|科研+企业，可以进计算机方向，学4/5|
|周泽浩|2023|药学+计算化学|一年一篇2区|高通量量子化学计算计算描述符+ai模型预测|push 不懂ai|非常相关，和自己之前的研究范式一样，但是太低级了|AI+量子化学预测药物分子亲和力|科研+企业，不需要学|

ps. 3个月的ai训练营，相当于让你熟悉科研范式，现在是周泽浩指导我量子力学计算，魏欣然指导我ai模型，大概率是三个月一篇文章的，跑路有点不太好
 。</description><guid isPermaLink="true">https://blackcatontree.github.io/zhoushilei.github.io/post/20251019%20-xuan-dao-shi.html</guid><pubDate>Sun, 19 Oct 2025 09:54:42 +0000</pubDate></item><item><title>20251018 蛋白质配体相互作用DFT计算部分</title><link>https://blackcatontree.github.io/zhoushilei.github.io/post/20251018%20-dan-bai-zhi-pei-ti-xiang-hu-zuo-yong-DFT-ji-suan-bu-fen.html</link><description>文件列表
- 01_process_mo2 : 读入配体的数据，通过mol2进行电荷合理/不合理的筛选，筛选出来的文件保存在logfile中，不合理的保存在wrong中
- 02_addchian: 读入蛋白质，计算残基的电荷，并对链进行标识符的重新分配
- 02_dump_protein:。</description><guid isPermaLink="true">https://blackcatontree.github.io/zhoushilei.github.io/post/20251018%20-dan-bai-zhi-pei-ti-xiang-hu-zuo-yong-DFT-ji-suan-bu-fen.html</guid><pubDate>Sat, 18 Oct 2025 11:24:40 +0000</pubDate></item><item><title>Linux 基础操作</title><link>https://blackcatontree.github.io/zhoushilei.github.io/post/Linux%20-ji-chu-cao-zuo.html</link><description># Linux 基础操作
##  进入命令
- cd +Tab 自动补全
- cd 后退到home
- cd .. 后退一格
- cd ../ 后退两格
- cd / 后退到根目录
- pwd 当前所处文件的绝对路径

## 展示命令
- ls 全部罗列
- ls |head 列出部分数据
- ls |head -n 100 列出100条数据
- ls |wc -l 列出文件夹中一共有多少个文件

## 文件操作
- pwd 输出当前的文件夹路径
- cp A B 将A 的文件复制到B 中
- cp A/* B 复制A 中的所有文件到A 中
- rm -rf data 删除文件
- tar -xzvf name.tar.gz|head-100  解压出来，看看100个
- tar -xzvf name.tar.gz 直接解压
- sudo apt update
- sudo apt install p7zip-full #7z安装
- 7z x 01_ligand_process.7z # 解压7z文件
- 7z x 01_ligand_process.7z -o/path/to/destination # 解压到指定目录
- 7z l 01_ligand_process.7z # 列出压缩包的内容
- 7z t 01_ligand_process.7z # 测试压缩包的完整性
- zip -r data5k.zip /database 将database文件夹压缩到data5k.zip
- ls | head -100 | xargs -I {} cp {} /home/user/destination/ 复制100个到xargs管道中，并到文件夹 （复制文件）
- ls | head -5000 | xargs -I {} cp -r '{}' /home/dataset-assist-0/tmp/zsl/0-database 直接复制文件夹 需要-r

 - ls |head -1000|xargs -I {} cp {} /home/dataset-assist-0/tmp/zsl/GatorAffinity-DB/GatorAffinity-DB-Fixed


## 查看命令
- df -h /home/dataset 查看当前文件的磁盘容量


## 行动命令
- ctrl c 中止当前操作
- kill %1 中断当前序号为1 的项目
- kill %$(jobs -p) 中断所有的项目
- ctrl z 暂停当前操作

## 基础函数操作
- echo 'my script begin to run!' # 打印函数
- python 命令行输入：
```powershell
local pdbid=$1 #读取命令行输入，注意没有空格
python myscrip.py\
--ligandfile '$ligandfile'\
``` 
- python 的引用
python 同文件夹下的.py
python \home\tmp\zsl\全文件下的.py

ls | head -5000 | while read -r item; do
    cp -r '$item' /home/dataset-assist-0/tmp/zsl/0-database
done

## 调用函数的方式
- 定义函数：01_ligand_process() { } # 大括号前需要空格
- chmod +x your_script.sh #给脚本增加权限
- ./your_script.sh # 直接运行
- cat 01_ligand_data.txt | parallel --joblog 02.log --retries 3 --jobs 16 01_ligand_process {} # 最后面的大括号前面需要空格
- base_directory=$(pwd)
# 基本配置
- 安装GNU parallel
sudo apt-get install parallel  # Ubuntu/Debian
- 安装文件转化
sudo apt install dos2unix
dos2unix mydoc.txt
## 单文件txt操作
- cp 01_ligand_data.txt 01_ligand_data.txt.backup #备份原文件
- sed -i 's/[[:space:]]//g' 01_ligand_data.txt # 移除所有空白字符（空格、制表符）
- cat 01_ligand_data.txt | head -10 #列出来清理之后的操作。</description><guid isPermaLink="true">https://blackcatontree.github.io/zhoushilei.github.io/post/Linux%20-ji-chu-cao-zuo.html</guid><pubDate>Fri, 17 Oct 2025 17:35:55 +0000</pubDate></item><item><title>20251017 《现代软件工程》课程 个人博客作业 1——就《现代软件工程》提 5 个问题</title><link>https://blackcatontree.github.io/zhoushilei.github.io/post/20251017%20%E3%80%8A-xian-dai-ruan-jian-gong-cheng-%E3%80%8B-ke-cheng-%20-ge-ren-bo-ke-zuo-ye-%201%E2%80%94%E2%80%94-jiu-%E3%80%8A-xian-dai-ruan-jian-gong-cheng-%E3%80%8B-ti-%205%20-ge-wen-ti.html</link><description>Part B｜快速通读《构建之法》后的五个问题
说明：每个问题均包含“问题陈述｜触发出处｜我们查的资料(显然,这里有LLM辅助写作)｜LLM提出并建议我实践的计划｜未解之惑/待验证”，并尽量给出可复用的评估维度或实验设计思路。</description><guid isPermaLink="true">https://blackcatontree.github.io/zhoushilei.github.io/post/20251017%20%E3%80%8A-xian-dai-ruan-jian-gong-cheng-%E3%80%8B-ke-cheng-%20-ge-ren-bo-ke-zuo-ye-%201%E2%80%94%E2%80%94-jiu-%E3%80%8A-xian-dai-ruan-jian-gong-cheng-%E3%80%8B-ti-%205%20-ge-wen-ti.html</guid><pubDate>Fri, 17 Oct 2025 14:35:39 +0000</pubDate></item><item><title>20251017 博客测试</title><link>https://blackcatontree.github.io/zhoushilei.github.io/post/20251017%20-bo-ke-ce-shi.html</link><description>Hello world。</description><guid isPermaLink="true">https://blackcatontree.github.io/zhoushilei.github.io/post/20251017%20-bo-ke-ce-shi.html</guid><pubDate>Fri, 17 Oct 2025 14:27:05 +0000</pubDate></item></channel></rss>